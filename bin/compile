#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

START_TIME=$SECONDS

# set -x
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
NUMBER=$(date +%s)
TARGET_SCRATCH_ORG_ALIAS="scratch-$NUMBER"
vendorDir="vendor/sfdx"
devHubAuthFile="$BUILD_DIR/$vendorDir/sfdxurl"
qaAuthFile="$BUILD_DIR/$vendorDir/sfdxqaurl"

# set defaults for optional config vars
: ${SFDX_BUILDPACK_DEBUG:="false"}

source $BP_DIR/lib/lib.sh
source $BP_DIR/lib/deps.sh
source $BP_DIR/lib/sfdc.sh

setup_dirs() {
  export PATH="$BUILD_DIR/vendor/sfdx/cli/bin:$PATH"
  export PATH="$BUILD_DIR/vendor/sfdx/jq:$PATH"
}

export_env_dir() {
  if [ -d "$ENV_DIR" ]; then
    for e in $(ls $ENV_DIR); do
      export $e=$(cat $ENV_DIR/$e)
      :
    done
  fi
}

deploy_to_scratch() {
  cd $BUILD_DIR

  sfdx_auth_devhub_sfdxurl $devHubAuthFile $SFDX_DEV_HUB_AUTH_URL $DEV_HUB_USERNAME
  sfdx_create_scratch $DEV_HUB_USERNAME $TARGET_SCRATCH_ORG_ALIAS
  sfdx_source_push $TARGET_SCRATCH_ORG_ALIAS
  sfdx_run_test $TARGET_SCRATCH_ORG_ALIAS
  sfdx_delete_scratch $TARGET_SCRATCH_ORG_ALIAS

}

header 'Welcome to aquiva-sfdx-buildpack!'

export_env_dir

log "Setting up paths ..."
setup_dirs

log "Starting CLI installation ..."
install_sfdx_cli $BUILD_DIR

log "Starting jq installation ..."
install_jq $BUILD_DIR

# Create .profile.d folder
mkdir -p $BUILD_DIR/.profile.d

# if no .profile.d/path.sh, create one
if [ ! -f $BUILD_DIR/.profile.d/path.sh ]; then
  log "Creating path.sh ..."
  echo "echo \"Updating PATH to include Salesforce CLI ...\"
  export PATH=\$PATH:/app/vendor/sfdx/cli/bin/" > $BUILD_DIR/.profile.d/path.sh

  log "Generated $BUILD_DIR/.profile.d/path.sh to add CLI path"
fi

# deploy on app review
if [ "$STAGE" == "" ]; then
  header "Review app deploy"

  deploy_to_scratch

fi

# deploy on QA org
if [ "$STAGE" == "DEV" ]; then
  header "QA app deploy"

  # deploy_to_scratch
  cd $BUILD_DIR

  sfdx_auth_devhub_sfdxurl $devHubAuthFile $SFDX_DEV_HUB_AUTH_URL $DEV_HUB_USERNAME

  install_package_version $SFDX_PACKAGE_NAME $DEV_HUB_USERNAME $QA_USERNAME

fi

header "DONE! Completed in $(($SECONDS - $START_TIME))s"
exit 0